{"ast":null,"code":"import { AUTH_ERROR, REGISTER } from \"./types\";\nimport Swal from \"sweetalert2\";\n\nconst authError = error => async dispatch => {\n  dispatch({\n    type: AUTH_ERROR,\n    payload: error.message\n  });\n  setTimeout(() => {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: null\n    });\n  }, 5000);\n};\n\nexport const register = data => async dispatch => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/v1/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const result = await response.json();\n    console.log(result);\n    console.log(process.env.REACT_APP_BACKEND_URL);\n    dispatch({\n      type: REGISTER,\n      payload: result.user\n    });\n\n    if (result.user) {\n      await Swal.fire({\n        icon: \"success\",\n        title: \"Success\",\n        text: \"You have successfully registered\"\n      });\n    } else {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: result.message\n      });\n    }\n  } catch (error) {\n    authError(error);\n  }\n};","map":{"version":3,"names":["AUTH_ERROR","REGISTER","Swal","authError","error","dispatch","type","payload","message","setTimeout","register","data","response","fetch","process","env","REACT_APP_BACKEND_URL","method","headers","body","JSON","stringify","result","json","console","log","user","fire","icon","title","text"],"sources":["/mnt/c/Users/Haikal/Desktop/MSIB-Binar/Project-Akhir/FE-Team-1-Final-Project/src/redux/actions/authActions.js"],"sourcesContent":["import { AUTH_ERROR, REGISTER } from \"./types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst authError = (error) => async (dispatch) => {\r\n  dispatch({\r\n    type: AUTH_ERROR,\r\n    payload: error.message,\r\n  });\r\n\r\n  setTimeout(() => {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n      payload: null,\r\n    });\r\n  }, 5000);\r\n};\r\n\r\nexport const register = (data) => async (dispatch) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_BACKEND_URL}/api/v1/register`,\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    );\r\n    const result = await response.json();\r\n    console.log(result);\r\n    console.log(process.env.REACT_APP_BACKEND_URL);\r\n    dispatch({\r\n      type: REGISTER,\r\n      payload: result.user,\r\n    });\r\n    if (result.user) {\r\n      await Swal.fire({\r\n        icon: \"success\",\r\n        title: \"Success\",\r\n        text: \"You have successfully registered\",\r\n      });\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: result.message,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    authError(error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,SAArC;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW,MAAOC,QAAP,IAAoB;EAC/CA,QAAQ,CAAC;IACPC,IAAI,EAAEN,UADC;IAEPO,OAAO,EAAEH,KAAK,CAACI;EAFR,CAAD,CAAR;EAKAC,UAAU,CAAC,MAAM;IACfJ,QAAQ,CAAC;MACPC,IAAI,EAAEN,UADC;MAEPO,OAAO,EAAE;IAFF,CAAD,CAAR;EAID,CALS,EAKP,IALO,CAAV;AAMD,CAZD;;AAcA,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU,MAAON,QAAP,IAAoB;EACpD,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,kBADX,EAE1B;MACEC,MAAM,EAAE,MADV;MAEEC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFX;MAKEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;IALR,CAF0B,CAA5B;IAUA,MAAMW,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAArB;IACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ;IACAE,OAAO,CAACC,GAAR,CAAYX,OAAO,CAACC,GAAR,CAAYC,qBAAxB;IACAX,QAAQ,CAAC;MACPC,IAAI,EAAEL,QADC;MAEPM,OAAO,EAAEe,MAAM,CAACI;IAFT,CAAD,CAAR;;IAIA,IAAIJ,MAAM,CAACI,IAAX,EAAiB;MACf,MAAMxB,IAAI,CAACyB,IAAL,CAAU;QACdC,IAAI,EAAE,SADQ;QAEdC,KAAK,EAAE,SAFO;QAGdC,IAAI,EAAE;MAHQ,CAAV,CAAN;IAKD,CAND,MAMO;MACL5B,IAAI,CAACyB,IAAL,CAAU;QACRC,IAAI,EAAE,OADE;QAERC,KAAK,EAAE,SAFC;QAGRC,IAAI,EAAER,MAAM,CAACd;MAHL,CAAV;IAKD;EACF,CA/BD,CA+BE,OAAOJ,KAAP,EAAc;IACdD,SAAS,CAACC,KAAD,CAAT;EACD;AACF,CAnCM"},"metadata":{},"sourceType":"module"}